pipeline {
  agent any 
  tools {
    maven 'Maven'
  }
  stages {
    stage ('Initialize') {
      steps {
        sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
            ''' 
      }
    }

    stage ('Source Composition Analysis') {
      steps {
         sh 'rm owasp* || true'
         sh 'wget "https://raw.githubusercontent.com/rasakilukumon02hub/webapp/master/owasp-dependency-check.sh" '
         sh 'chmod +x owasp-dependency-check.sh'
         sh 'bash owasp-dependency-check.sh'
         sh 'cat /var/lib/jenkins/OWASP-Dependency-Check/reports/dependency-check-report.xml'
        
      }
    }   
    stage ('SAST') {
      steps {
        withSonarQubeEnv('sonar') {
          sh 'mvn sonar:sonar'
          sh 'cat target/sonar/report-task.txt'
        }
      }
    }

    stage ('Build') {
      steps {
      sh 'mvn clean package'
       }
    }

    stage ('upload to artifact') {
      steps {
          nexusArtifactUploader artifacts: [[artifactId: 'WebApp', classifier: '', file: 'target/WebApp-1.0.0', type: 'war']], credentialsId: 'Nexus', groupId: 'lu.amazon.aws.demo', nexusUrl: '3.86.112.109', nexusVersion: 'nexus3', protocol: 'http', repository: 'http://3.86.112.109:8081/repository/artifacts/', version: '1.0.0'
       }
    }

    stage ('Deploy') {
      steps {
        sshagent(['SSH']) {
            sh 'scp -o StrictHostKeyChecking=no target/*.war ubuntu@3.83.230.24:/opt/tomcat/webapps/webapp.war'
        }
       }
    }
    
    stage ('DAST') {
      steps {
        sshagent(['SSH']) {
         sh 'ssh -o  StrictHostKeyChecking=no ubuntu@172.31.90.45 "docker run -t owasp/zap2docker-stable zap-baseline.py -t http://3.83.230.24:8080/webapp/"'
        }
      }
    }
}
}
